---
- name: SSH Port 변경
  hosts: all
  become: true
  vars:
    new_port: "22"  # Set your desired new SSH port here
    backup_date: "{{ ansible_date_time.date }}"

  tasks:
    - name: 기존 설정파일 백업 만들기 메시지
      ansible.builtin.debug:
        msg: "기존 설정파일을 백업합니다: /etc/ssh/sshd_config.{{ backup_date }}.bak"

    - name: 기존 설정파일 백업 만들기
      ansible.builtin.copy:
        src: /etc/ssh/sshd_config
        dest: /etc/ssh/sshd_config.{{ backup_date }}.bak
        backup: yes

    - name: 포트 변경하기
      ansible.builtin.lineinfile:
        path: /etc/ssh/sshd_config
        regexp: '^#?Port '
        line: 'Port {{ new_port }}'
        state: present

    - name: SSH 설정파일 테스트
      ansible.builtin.command: sshd -t
      register: sshd_check
      failed_when: sshd_check.rc != 0

    - name: 방화벽 세팅 (firewalld)
      ansible.posix.firewalld:
        port: "{{ new_port }}/tcp"
        permanent: yes
        state: enabled
      when: ansible_facts['os_family'] == "RedHat"

    - name: 방화벽 세팅 (ufw)
      community.general.ufw:
        rule: allow
        port: "{{ new_port }}"
      when: ansible_facts['os_family'] == "Debian"

    - name: SELinux 임시 정지
      ansible.posix.selinux:
        state: disabled
      when: ansible_facts['selinux']['status'] != 'disabled'  # Check if SELinux is not already disabled

    - name: SSH 재시작
      ansible.builtin.systemd:
        name: sshd
        state: restarted
        enabled: yes
      when: ansible_facts['os_family'] in ["RedHat", "Debian"]

    - name: SELinux 재시작
      ansible.posix.selinux:
        state: enforcing
        policy: targeted
      when: ansible_facts['selinux']['status'] == 'disabled'  # Check if SELinux was previously disabled
